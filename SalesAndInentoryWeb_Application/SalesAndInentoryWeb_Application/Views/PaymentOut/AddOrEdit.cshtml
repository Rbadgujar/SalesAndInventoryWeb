@model SalesAndInentoryWeb_Application.tbl_Paymentout

@{
    Layout = null;
}
<style>
    #tt {
        background-color: white;
        color: black;
        outline: none;
        outline-style: none;
        border-top: none;
        border-left: none;
        border-right: none;
        border-bottom: solid #eeeeee 1px;
        padding: 3px 10px;
    }
     #div {
        border-radius: 5px;
        background-color: #f2f2f2;
        padding: 20px;
    }
</style>
@using (Html.BeginForm())
{
    <div id="div">
    @Html.AntiForgeryToken()
    <br />
    @*<h4>Company Iformation:</h4>
        <hr style="margin-top:10px;width:300px;margin-left:1px" />*@
    <div class="row">
        <div class="col-md-2" style="text-align:right"> Party Name:</div>
        <div class="col-md-4">
            @Html.DropDownListFor(model => model.CustomerName, Model.ListOfParties, "Select Parties", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-2" style="text-align:right">  Receipt No:</div>
        <div class="col-md-4">
            @Html.EditorFor(model => model.ReceiptNo, new { htmlAttributes = new { @class = "form-control", id = "tt" } })
        @Html.ValidationMessageFor(model => model.ReceiptNo, "", new { @class = "text-danger" })
    </div>
</div>
    <br />
    <div class="row">
        <div class="col-md-2" style="text-align:right">
            Pay Type:
        </div>
        <div class="col-md-4">
            <select id="PaymentType" name="PaymentType" class="form-control">
                <option value="Cash">Cash</option>
                <option value="Cheque">Cheque</option>
                <option value="From Bank Account">From Bank Account</option>
            </select>
        </div>
        <div class="col-md-2" style="text-align:right"> Date:</div>
        <div class="col-md-4">
            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
        </div>
    </div>
        <br />
        <div class="row">
            <div class="col-md-2" style="text-align:right">
                Description :
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2" style="text-align:right"> Debit :</div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.TableName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TableName, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-2" style="text-align:right">
                Image:
            </div>
            <div class="col-md-4">
                <input type="file" name="updatefiel" class="form-control" />
            </div>
            <div class="col-md-2" style="text-align:right"> Payment Out :</div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.Paid, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Paid, "", new { @class = "text-danger" })
            </div>
            <br>
            <div class="col-md-4"> </div>
          
            <div class="col-md-4">
                <input type="submit" value="Save" class="btn btn-primary" style="width:80px;font-size:14px;" />
                <input type="reset" value="Clear" class="btn btn-primary" style="width:80px;font-size:14px;" />
            </div>
          
        </div>
        </div>
}
<script src="~/scripts/jquery-1.12.4.min.js"></script>
<script type="text/javascript">
    var date = new Date();
    var day = date.getDate();
    var month = date.getMonth() + 1;
    var year = date.getFullYear();
    if (month < 10) month = "0" + month;
    if (day < 10) day = "0" + day;
    var today = year + "-" + month + "-" + day;
    $("#Date").attr("value", today);

    $("#Paid").change(function () {

        var creditamount = $("#TableName").val();
        var recive = $("#Paid").val();
        var remaing = creditamount + recive;

    });

    $("#CustomerName").change(function () {
        debugger
        var fruitId = $(this).find("option:selected").val();
        if (fruitId != "") {
            $.ajax
                ({
                    type: "POST",
                    url: "/PaymentOut/GetFruitName",
                    data: "id=" + fruitId,
                    success: function (data) {
                        var content = "";
                        for (var x in data) {
                            $("#TableName").val(data[x].OpeningBal);
                        }
                    }
                });
        }
    });
</script>
