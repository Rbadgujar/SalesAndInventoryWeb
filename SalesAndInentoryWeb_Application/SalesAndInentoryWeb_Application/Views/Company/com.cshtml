@model SalesAndInentoryWeb_Application.tbl_CompanyMasterSelectResult
@{
    Layout = null;
}
<style>
    .thumb {
  height: 75px;
  border: 1px solid #000;
  margin: 10px 5px 0 0;
}
</style>
@using (Html.BeginForm("com", "Company", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <br />
    @*<h4>Company Iformation:</h4>
    <hr style="margin-top:10px;width:300px;margin-left:1px" />*@

    <div class="row">
        <div class="col-md-4">
            Company Name:
            @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control", id = "Company name" } })
            @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
           </div>
        <div class="col-md-4">
            Mobile No:
            @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })


          </div>
        <div class="col-md-4">
            Address:
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })


        </div>
        </div>
        <br />

        <div class="row">

            <div class="col-md-4">
                   Email Id:
                @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })


             </div>
            <div class="col-md-4">
                City:
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })


                   </div>
            <div class="col-md-4">

                State:
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })






            </div>
            </div><br />

<div class="row">
    <div class="col-md-4">
        Refrance  No:
        @Html.EditorFor(model => model.ReferaleCode, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ReferaleCode, "", new { @class = "text-danger" })
    </div>
    <div class="col-md-4">
        Business Type:
        @Html.EditorFor(model => model.BusinessType, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.BusinessType, "", new { @class = "text-danger" })
    </div>
    <div class="col-md-4">
        Gst No:
        @Html.EditorFor(model => model.GSTNumber, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.GSTNumber, "", new { @class = "text-danger" })



    </div>

    </div>
    <h4>Account Details :</h4>
    <hr style="margin-top:10px;width:300px;margin-left:1px" />
    <div class="row">
        <div class="col-md-4">
            Account No :
            @Html.EditorFor(model => model.AccountNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AccountNo, "", new { @class = "text-danger" })
           <br />
            
</div>
        <div class="col-md-4">
            IFSC Code:
            @Html.EditorFor(model => model.IFSC_Code, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.IFSC_Code, "", new { @class = "text-danger" })

            <br />
         
        </div>
        <div class="col-md-4">
           Bank Name:
            @Html.EditorFor(model => model.BankName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
            <br />
        
        </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                Company Logo:
               
                <input type="file" accept="image/*"  class="single" name="files"    id="postedFile" onchange="loadFile(event)">
                <img id="output" />
                  
            </div>
            <div class="col-md-4">
                Singnature:

                <input type="file" accept="image/*" class="single" name="files"  id="postedFile1" onchange="loadFile1(event)">
                <img id="output1" />
            </div>

            <div class="col-md-4">

                <br />
                <input type="submit" value="Save" class="btn btn-primary" style="width:80px;font-size:14px;" />
                <input type="reset" value="Clear" class="btn btn-primary" style="width:80px;font-size:14px;" />
            </div>
        </div>

}
<script>
  var loadFile = function(event) {
    var output = document.getElementById('output');
    output.src = URL.createObjectURL(event.target.files[0]);
    output.onload = function() {
      URL.revokeObjectURL(output.src) // free memory
    }
  };
  var loadFile1 = function (event) {
      var output1 = document.getElementById('output1');
      output1.src = URL.createObjectURL(event.target.files[0]);
      output1.onload = function () {
          URL.revokeObjectURL(output1.src) // free memory
      }
  };
</script>

